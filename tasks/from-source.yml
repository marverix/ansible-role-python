---
- name: Set python version name
  set_fact:
    python3_name: "python{{ python3_version }}"

- name: Set source dest
  set_fact:
    python3_src: "/usr/src/{{ python3_name }}"

- name: Create src dir
  file:
    name: "{{ python3_src }}"
    state: directory
    mode: 0755
  changed_when: false

- name: Download the archive
  get_url:
    url: "{{ python3_sources[python3_version] }}"
    dest: "{{ python3_src }}/archive"
  register: response
  changed_when: "response.status_code != 200"

- name: Unarchive
  unarchive:
    src: "{{ python3_src }}/archive"
    dest: "{{ python3_src }}"
    remote_src: yes
    extra_opts: [--strip-components=1]
  register: result
  changed_when: "result.extract_results.rc != 0"

- name: Install dependencies
  block:

    - name: For Ubuntu
      when: ansible_distribution == 'Ubuntu'
      apt:
        name:
          - build-essential
          - checkinstall
          - libreadline-gplv2-dev
          - libncursesw5-dev
          - libssl-dev
          - libsqlite3-dev
          - tk-dev
          - libgdbm-dev
          - libc6-dev
          - libbz2-dev

    - name: For CentOS
      when: ansible_distribution == 'CentOS'
      yum:
        name:
          - gcc
          - make
          - zlib-devel
          - bzip2
          - bzip2-devel
          - readline-devel
          - sqlite
          - sqlite-devel
          - openssl-devel
          - tk-devel
          - libffi-devel
          - xz-devel
          - gdbm-devel
          - ncurses-devel

- name: Configure
  command:
    chdir: "{{ python3_src }}"
    cmd: "./configure --enable-optimizations"
  changed_when: false

- name: Install
  command:
    chdir: "{{ python3_src }}"
    cmd: "make altinstall"
  changed_when: false

- name: Clean
  file:
    path: "{{ python3_src }}"
    state: absent
  changed_when: false
